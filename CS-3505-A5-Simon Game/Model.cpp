/*
 * Author: Krish Mahtani & Rayyan Hamid
 * Date: 28th October 2022
 * A5: Qt Simon Game
*/
#include "Model.h"
#include <QTimer>
#include <QTime>

Model::Model(QObject *parent)
    : QObject{parent}
{

}

//add color to existing sequence
std::list<char> Model::generateSequence() {

    int color = rand()%2;//50% chance of getting an odd or even number
    if(color == 0)
        simonSequence.push_back('R');
    else
        simonSequence.push_back('B');
    return simonSequence;
}

//checking if player chose the correct color
void Model::checkButton(char playerInput) {

    std::list<char>::iterator it = simonSequence.begin();//iterate over sequence
    std::advance(it, currStep-1);//current step
    if(playerInput == *it){
        percentageOfProgressBar();
        if(currStep == sequenceSize()){
            emit winMessage();
        }
    }
    else
    {
        //clears the sequence to restart the game
        simonSequence.clear();
        emit youLoseMessage();
    }
}

//size of the sequence
int Model::sequenceSize() {
    return simonSequence.size();
}

//percentage of the progress of the game
void Model::percentageOfProgressBar() {
    int progress = (((currStep*100)/sequenceSize()));
    emit progressBarUpdate(progress);//update progress bar
}

//make current step 0 for the next round
void Model::reset() {
    currStep = 0;
}

//start the round/game
void Model::startButtonClicked(){
    reset();
    emit disableButton();
    generateSequence();
    displaySimonsSequence();
}

//increment current step and check if it is correct
void Model::redButtonClicked(){
    currStep++;
    checkButton('R');
}

//increment current step and check if it is correct
void Model::blueButtonClicked(){
    currStep++;
    checkButton('B');
}

//display the sequence generated by simon to the user
void Model::displaySimonsSequence(){
    for (std::list<char>::iterator it=simonSequence.begin(); it != simonSequence.end(); ++it) {
        if(*it == 'R') {
            emit changeRedButtonColour(sequenceSize());
        }
        if(*it == 'B') {
            emit changeBlueButtonColour(sequenceSize());
        }

    }
    emit yourTurnMessage();
}
